export interface IAttributes {
    [property: string]: string | number;
}
export interface IExcludeItem {
    pattern: string;
    strict: boolean;
}
export interface ICleanOptions {
    stripEmptyTags?: boolean;
    stripTags?: string[];
    stripAttrs?: (string | IExcludeItem)[];
    stripExtraAttrs?: boolean;
    stripStyles?: boolean | string[];
}
export interface IOptions {
    rootAttributes?: IAttributes;
    inline?: boolean;
    iconAttributes?: IAttributes;
    iconPrefix?: string;
    iconSuffix?: string;
    clean?: ICleanOptions;
}
export declare function collection(options?: IOptions): {
    add: (name: string, content: string, iconOptions?: IOptions) => void;
    get: (name: string) => string;
    remove: (name: string) => void;
    clean: () => void;
    compile: () => string;
};
