{"ast":null,"code":"import _defineProperty from \"/Users/mindaugas/Desktop/frontend-party/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mindaugas/Desktop/frontend-party/src/components/LoginForm/LoginForm.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport InputField from \"../InputField/InputField\";\nimport Icon from \"../Icon/Icon\";\nimport Button from \"../Button/Button\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { localStorageKey } from \"../../constants/auth.constants\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.login = async body => {\n      this.setState({\n        isLoading: true\n      });\n      const response = await fetch('http://playground.tesonet.lt/v1/tokens', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const data = await response.json();\n\n      if (data) {\n        // Successful login\n        if (data.token) {\n          console.log(data.token);\n          localStorage.setItem(localStorageKey, data.token); // this.props.history.push('/');\n        } else if (data.message) {\n          console.log(data.message);\n        }\n      }\n    };\n\n    this.submitFormHandler = async event => {\n      event.preventDefault();\n      const target = event.target;\n      const username = target.username.value;\n      const password = target.password.value;\n      let errors = this.state.form;\n\n      if (!username) {\n        errors = _objectSpread({}, errors, {\n          username: {\n            error: 'Required'\n          }\n        });\n      }\n\n      if (!password) {\n        errors = _objectSpread({}, errors, {\n          password: {\n            error: 'Required'\n          }\n        });\n      }\n\n      if (errors) {\n        this.setState({\n          form: errors\n        });\n      }\n\n      if (username && password) {\n        this.login({\n          username,\n          password\n        });\n      }\n    };\n  }\n\n  clearInputFieldState() {}\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.submitFormHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      type: 'text',\n      name: 'username',\n      placeholder: 'Username',\n      error: this.state.form.username.error,\n      onChange: () => this.setState({}),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'username',\n      color: '#CCC',\n      width: 14,\n      height: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(InputField, {\n      type: 'password',\n      name: 'password',\n      placeholder: 'Password',\n      extraClasses: 'danger',\n      error: this.state.form.password.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'password',\n      color: '#CCC',\n      width: 14,\n      height: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(Button, {\n      title: 'Log in',\n      extraClasses: \"w-100\",\n      buttonStyle: \"success\",\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(LoginForm);","map":{"version":3,"sources":["/Users/mindaugas/Desktop/frontend-party/src/components/LoginForm/LoginForm.tsx"],"names":["InputField","Icon","Button","React","Component","withRouter","localStorageKey","LoginForm","login","body","setState","isLoading","response","fetch","method","headers","JSON","stringify","data","json","token","console","log","localStorage","setItem","message","submitFormHandler","event","preventDefault","target","username","value","password","errors","state","form","error","clearInputFieldState","render"],"mappings":"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","sourcesContent":["import InputField from \"../InputField/InputField\";\nimport Icon from \"../Icon/Icon\";\nimport Button from \"../Button/Button\";\nimport React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {localStorageKey} from \"../../constants/auth.constants\";\n\ninterface FormInterface {\n    username: { error: string | null };\n    password: { error: string | null };\n}\n\ninterface StateInterface {\n    isLoading: boolean;\n    form: FormInterface;\n}\n\nclass LoginForm extends Component<any, StateInterface> {\n    login = async (body: { username: string, password: string }) => {\n        this.setState({\n            isLoading: true\n        });\n\n        const response = await fetch('http://playground.tesonet.lt/v1/tokens', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        });\n\n        const data = await response.json();\n\n        if (data) {\n            // Successful login\n            if (data.token) {\n                console.log(data.token);\n                localStorage.setItem(localStorageKey, data.token);\n                // this.props.history.push('/');\n            } else if (data.message) {\n                console.log(data.message);\n            }\n        }\n    };\n\n    submitFormHandler = async (event: any) => {\n        event.preventDefault();\n        const {target} = event;\n        const username = target.username.value;\n        const password = target.password.value;\n\n        let errors: FormInterface = this.state.form;\n\n        if (!username) {\n            errors = {...errors, username: {error: 'Required'}}\n        }\n\n        if (!password) {\n            errors = {...errors, password: {error: 'Required'}}\n        }\n\n        if (errors) {\n            this.setState({\n                form: errors\n            })\n        }\n\n        if (username && password) {\n            this.login({username, password});\n        }\n    };\n\n    clearInputFieldState() {\n\n    }\n\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.submitFormHandler}>\n                <InputField type={'text'}\n                            name={'username'}\n                            placeholder={'Username'}\n                            error={this.state.form.username.error}\n                            onChange={() => this.setState({})}\n                >\n                    <Icon name={'username'} color={'#CCC'} width={14} height={16}/>\n                </InputField>\n\n                <InputField type={'password'}\n                            name={'password'}\n                            placeholder={'Password'}\n                            extraClasses={'danger'}\n                            error={this.state.form.password.error}\n                >\n                    <Icon name={'password'} color={'#CCC'} width={14} height={16}/>\n                </InputField>\n\n                <Button title={'Log in'}\n                        extraClasses=\"w-100\"\n                        buttonStyle=\"success\"\n                        type=\"submit\"\n                        isLoading={this.state.isLoading}\n                />\n            </form>\n        )\n    }\n}\n\nexport default withRouter(LoginForm);"]},"metadata":{},"sourceType":"module"}