{"ast":null,"code":"import _defineProperty from \"/Users/mindaugas/Desktop/frontend-party/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_SERVERS } from \"../actions\";\nconst initState = {\n  items: [],\n  isLoading: false\n};\nexport default function (state = initState, action) {\n  switch (action.type) {\n    case FETCH_SERVERS:\n      return _objectSpread({}, state, {\n        items: action.payload,\n        isLoading: action.isLoading\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mindaugas/Desktop/frontend-party/src/reducers/server.reducer.ts"],"names":["FETCH_SERVERS","initState","items","isLoading","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,aAAR,QAA4B,YAA5B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,EADO;AAEdC,EAAAA,SAAS,EAAE;AAFG,CAAlB;AAKA,eAAe,UAASC,KAAK,GAAGH,SAAjB,EAA4BI,MAA5B,EAAyC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFlB;AAGIJ,QAAAA,SAAS,EAAEE,MAAM,CAACF;AAHtB;;AAKJ;AACI,aAAOC,KAAP;AARR;AAUH","sourcesContent":["import {FETCH_SERVERS} from \"../actions\";\n\nconst initState = {\n    items: [],\n    isLoading: false\n};\n\nexport default function(state = initState, action: any) {\n    switch (action.type) {\n        case FETCH_SERVERS:\n            return {\n                ...state,\n                items: action.payload,\n                isLoading: action.isLoading\n            };\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}