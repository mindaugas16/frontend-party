{"ast":null,"code":"var _jsxFileName = \"/Users/mindaugas/Desktop/frontend-party/src/ServerList/ServerList.tsx\";\nimport React, { Component } from \"react\";\nimport \"./ServerList.scss\";\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nclass ServerList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const token = await localStorage.getItem('jwtToken');\n\n    if (!token) {\n      console.log('Please login');\n      history.push('/sign-in');\n      return;\n    }\n\n    const response = await fetch('http://playground.tesonet.lt/v1/servers', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    this.setState({\n      data: await response.json()\n    });\n  }\n\n  createList() {\n    return this.state.data.sort((a, b) => {\n      return a.distance - b.distance || +a.name - +b.name;\n    }).map((server, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, server.name), React.createElement(\"th\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, server.distance, \" km\"));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table server-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Server\"), React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Distance\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.createList())));\n  }\n\n}\n\nexport default ServerList;","map":{"version":3,"sources":["/Users/mindaugas/Desktop/frontend-party/src/ServerList/ServerList.tsx"],"names":["React","Component","createBrowserHistory","history","ServerList","state","data","componentDidMount","token","localStorage","getItem","console","log","push","response","fetch","method","headers","setState","json","createList","sort","a","b","distance","name","map","server","i","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,mBAAP;AACA,SAASC,oBAAT,QAAqC,SAArC;AAEA,MAAMC,OAAO,GAAGD,oBAAoB,EAApC;;AAYA,MAAME,UAAN,SAAyBH,SAAzB,CAAuD;AAAA;AAAA;AAAA,SACnDI,KADmD,GAC3B;AACpBC,MAAAA,IAAI,EAAE;AADc,KAD2B;AAAA;;AAKnD,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAApB;;AACA,QAAI,CAACF,KAAL,EAAY;AACRG,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAT,MAAAA,OAAO,CAACU,IAAR,CAAa,UAAb;AACA;AACH;;AACD,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AACpEC,MAAAA,MAAM,EAAE,KAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAiB,YAAYT;AAHxB;AAF2D,KAA5C,CAA5B;AASA,SAAKU,QAAL,CAAc;AACVZ,MAAAA,IAAI,EAAE,MAAMQ,QAAQ,CAACK,IAAT;AADF,KAAd;AAGH;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKf,KAAL,CAAWC,IAAX,CAAgBe,IAAhB,CAAqB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClC,aAAOD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAf,IAA2B,CAACF,CAAC,CAACG,IAAH,GAAU,CAACF,CAAC,CAACE,IAA/C;AACH,KAFM,EAEJC,GAFI,CAEA,CAACC,MAAD,EAASC,CAAT,KAAe;AAClB,aACI;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,MAAM,CAACF,IAAxB,CADJ,EAEI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BE,MAAM,CAACH,QAAnC,QAFJ,CADJ;AAMH,KATM,CAAP;AAUH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,UAAL,EADL,CAPJ,CADJ,CADJ;AAeH;;AAvDkD;;AA0DvD,eAAehB,UAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"./ServerList.scss\";\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\ninterface StateInterface {\n    data: ServerInterface[];\n    history?: History[];\n}\n\nexport interface ServerInterface {\n    name: string;\n    distance: number;\n}\n\nclass ServerList extends Component<{}, StateInterface> {\n    state: StateInterface = {\n        data: [],\n    };\n\n    async componentDidMount() {\n        const token = await localStorage.getItem('jwtToken');\n        if (!token) {\n            console.log('Please login');\n            history.push('/sign-in');\n            return;\n        }\n        const response = await fetch('http://playground.tesonet.lt/v1/servers', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token,\n            }\n        });\n\n        this.setState({\n            data: await response.json()\n        });\n    }\n\n    createList() {\n        return this.state.data.sort((a, b) => {\n            return a.distance - b.distance || +a.name - +b.name;\n        }).map((server, i) => {\n            return (\n                <tr key={i}>\n                    <th scope=\"row\">{server.name}</th>\n                    <th className=\"text-right\">{server.distance} km</th>\n                </tr>\n            )\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <table className=\"table server-list\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Server</th>\n                            <th scope=\"col\" className=\"text-right\">Distance</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.createList()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default ServerList;\n\n"]},"metadata":{},"sourceType":"module"}