{"ast":null,"code":"var _jsxFileName = \"/Users/mindaugas/Desktop/frontend-party/src/components/login-form/LoginForm.tsx\";\nimport InputField from \"../input-field/InputField\";\nimport Icon from \"../icon/Icon\";\nimport Button from \"../button/Button\";\nimport React, { Component } from \"react\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false\n    };\n\n    this.login = async body => {\n      this.setState({\n        isLoading: true\n      });\n      const response = await fetch('http://playground.tesonet.lt/v1/tokens', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"username\": \"tesonet\",\n          \"password\": \"partyanimal\"\n        })\n      });\n      const data = await response.json();\n\n      if (data) {\n        // Successful login\n        if (data.token) {\n          console.log(data.token);\n        } else if (data.message) {\n          console.log(data.message);\n        }\n      }\n    };\n\n    this.submitFormHandler = async event => {\n      event.preventDefault();\n      const target = event.target;\n      const username = target.username.value;\n      const password = target.password.value;\n\n      if (username && password) {\n        this.login({\n          username,\n          password\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form\",\n      onSubmit: this.submitFormHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      type: 'text',\n      name: 'username',\n      placeholder: 'Username',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'username',\n      color: '#CCC',\n      width: 14,\n      height: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(InputField, {\n      type: 'password',\n      name: 'password',\n      placeholder: 'Password',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: 'password',\n      color: '#CCC',\n      width: 14,\n      height: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(Button, {\n      title: 'Log in',\n      extraClasses: \"w-100\",\n      buttonStyle: \"success\",\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/mindaugas/Desktop/frontend-party/src/components/login-form/LoginForm.tsx"],"names":["InputField","Icon","Button","React","Component","LoginForm","state","isLoading","login","body","setState","response","fetch","method","headers","JSON","stringify","data","json","token","console","log","message","submitFormHandler","event","preventDefault","target","username","value","password","render"],"mappings":"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","sourcesContent":["import InputField from \"../input-field/InputField\";\nimport Icon from \"../icon/Icon\";\nimport Button from \"../button/Button\";\nimport React, {Component} from \"react\";\nimport { createBrowserHistory } from 'history';\n\ninterface StateInterface {\n    isLoading: boolean\n}\n\nclass LoginForm extends Component<{}, StateInterface> {\n    state: StateInterface = {\n        isLoading: false\n    };\n\n    login = async (body: {username: string, password: string}) => {\n        this.setState({\n            isLoading: true\n        });\n\n        const response = await fetch('http://playground.tesonet.lt/v1/tokens', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(\n                {\n                    \"username\": \"tesonet\",\n                    \"password\": \"partyanimal\"\n                }\n            )\n        });\n\n        const data = await response.json();\n\n        if (data) {\n            // Successful login\n            if (data.token) {\n                console.log(data.token);\n            } else if (data.message) {\n                console.log(data.message);\n            }\n        }\n    };\n\n    submitFormHandler = async (event: any) => {\n        event.preventDefault();\n        const {target} = event;\n        const username = target.username.value;\n        const password = target.password.value;\n\n        if (username && password) {\n            this.login({username, password});\n        }\n    };\n\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.submitFormHandler}>\n                <InputField type={'text'} name={'username'} placeholder={'Username'}>\n                    <Icon name={'username'} color={'#CCC'} width={14} height={16}/>\n                </InputField>\n\n                <InputField type={'password'} name={'password'} placeholder={'Password'}>\n                    <Icon name={'password'} color={'#CCC'} width={14} height={16}/>\n                </InputField>\n\n                <Button title={'Log in'}\n                        extraClasses=\"w-100\"\n                        buttonStyle=\"success\"\n                        type=\"submit\"\n                        isLoading={this.state.isLoading}\n                />\n            </form>\n        )\n    }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}