{"ast":null,"code":"import { localStorageKey } from \"../constants/auth.constants\";\nimport { useDispatch } from \"react-redux\";\nimport { loginAction } from \"../actions\";\n\nasync function login(username, password) {\n  const response = await fetch('http://playground.tesonet.lt/v1/tokens', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  const data = await response.json();\n\n  if (data) {\n    // Successful login\n    if (data.token) {\n      localStorage.setItem(localStorageKey, data.token);\n      const dispatch = useDispatch();\n      dispatch(loginAction());\n      return new Promise(resolve => resolve(true));\n    } else if (data.message) {\n      return new Promise(resolve => resolve(false));\n    }\n  }\n\n  return new Promise(resolve => resolve(false));\n}\n\nexport const userService = {\n  login\n};","map":{"version":3,"sources":["/Users/mindaugas/Desktop/frontend-party/src/services/auth.service.ts"],"names":["localStorageKey","useDispatch","loginAction","login","username","password","response","fetch","method","headers","body","JSON","stringify","data","json","token","localStorage","setItem","dispatch","Promise","resolve","message","userService"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,6BAA9B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,YAA1B;;AAEA,eAAeC,KAAf,CAAqBC,QAArB,EAAuCC,QAAvC,EAA2E;AACvE,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAD,EAA2C;AACnEC,IAAAA,MAAM,EAAE,MAD2D;AAEnEC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAF0D;AAMnEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBR,MAAAA,QADiB;AAEjBC,MAAAA;AAFiB,KAAf;AAN6D,GAA3C,CAA5B;AAYA,QAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AAEA,MAAID,IAAJ,EAAU;AACN;AACA,QAAIA,IAAI,CAACE,KAAT,EAAgB;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqBjB,eAArB,EAAsCa,IAAI,CAACE,KAA3C;AACA,YAAMG,QAAQ,GAAGjB,WAAW,EAA5B;AACAiB,MAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AACA,aAAO,IAAIiB,OAAJ,CAAqBC,OAAO,IAAIA,OAAO,CAAC,IAAD,CAAvC,CAAP;AACH,KALD,MAKO,IAAIP,IAAI,CAACQ,OAAT,EAAkB;AACrB,aAAO,IAAIF,OAAJ,CAAqBC,OAAO,IAAIA,OAAO,CAAC,KAAD,CAAvC,CAAP;AACH;AACJ;;AACD,SAAO,IAAID,OAAJ,CAAqBC,OAAO,IAAIA,OAAO,CAAC,KAAD,CAAvC,CAAP;AACH;;AAED,OAAO,MAAME,WAAW,GAAG;AACvBnB,EAAAA;AADuB,CAApB","sourcesContent":["import {localStorageKey} from \"../constants/auth.constants\";\nimport {useDispatch} from \"react-redux\";\nimport {loginAction} from \"../actions\";\n\nasync function login(username: string, password: string): Promise<boolean> {\n    const response = await fetch('http://playground.tesonet.lt/v1/tokens', {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username,\n            password\n        })\n    });\n\n    const data = await response.json();\n\n    if (data) {\n        // Successful login\n        if (data.token) {\n            localStorage.setItem(localStorageKey, data.token);\n            const dispatch = useDispatch();\n            dispatch(loginAction());\n            return new Promise<boolean>(resolve => resolve(true));\n        } else if (data.message) {\n            return new Promise<boolean>(resolve => resolve(false));\n        }\n    }\n    return new Promise<boolean>(resolve => resolve(false));\n}\n\nexport const userService = {\n    login\n};\n"]},"metadata":{},"sourceType":"module"}