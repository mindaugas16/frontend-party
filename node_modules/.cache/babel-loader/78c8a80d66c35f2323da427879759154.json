{"ast":null,"code":"var _jsxFileName = \"/Users/mindaugas/Desktop/frontend-party/src/ServerList/ServerList.tsx\";\nimport React, { Component } from \"react\";\nimport Server from \"./Server\";\n\nclass ServerList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidMount() {\n    const token = await localStorage.getItem('jwtToken');\n    const response = await fetch('http://playground.tesonet.lt/v1/servers', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    this.setState({\n      data\n    });\n  }\n\n  createList() {\n    const servers = this.state.data;\n    const serversList = servers.map(server => React.createElement(Server, {\n      name: server.name,\n      distance: server.distance,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n    console.log(serversList);\n    return serversList;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"List\", this.createList());\n  }\n\n}\n\nexport default ServerList;","map":{"version":3,"sources":["/Users/mindaugas/Desktop/frontend-party/src/ServerList/ServerList.tsx"],"names":["React","Component","Server","ServerList","state","data","componentDidMount","token","localStorage","getItem","response","fetch","method","headers","json","setState","createList","servers","serversList","map","server","name","distance","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAsC,UAAtC;;AAMA,MAAMC,UAAN,SAAyBF,SAAzB,CAAuD;AAAA;AAAA;AAAA,SACnDG,KADmD,GAC3B;AACpBC,MAAAA,IAAI,EAAE;AADc,KAD2B;AAAA;;AAKnD,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAApB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,EAA4C;AACpEC,MAAAA,MAAM,EAAE,KAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,yBAAiB,YAAYN;AAHxB;AAF2D,KAA5C,CAA5B;AASA,UAAMF,IAAI,GAAG,MAAMK,QAAQ,CAACI,IAAT,EAAnB;AAEA,SAAKC,QAAL,CAAc;AACVV,MAAAA;AADU,KAAd;AAGH;;AAEDW,EAAAA,UAAU,GAAG;AACT,UAAMC,OAAO,GAAG,KAAKb,KAAL,CAAWC,IAA3B;AAEA,UAAMa,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEA,MAAM,CAACC,IAArB;AAA2B,MAAA,QAAQ,EAAED,MAAM,CAACE,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CAApB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAEA,WAAOA,WAAP;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEK,KAAKT,UAAL,EAFL,CADJ;AAMH;;AAxCkD;;AA2CvD,eAAeb,UAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Server, {ServerInterface} from \"./Server\";\n\ninterface StateInterface {\n    data: ServerInterface[];\n}\n\nclass ServerList extends Component<{}, StateInterface> {\n    state: StateInterface = {\n        data: []\n    };\n\n    async componentDidMount() {\n        const token = await localStorage.getItem('jwtToken');\n        const response = await fetch('http://playground.tesonet.lt/v1/servers', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token,\n            }\n        });\n\n        const data = await response.json();\n\n        this.setState({\n            data\n        });\n    }\n\n    createList() {\n        const servers = this.state.data;\n\n        const serversList = servers.map(server => <Server name={server.name} distance={server.distance}/>);\n\n        console.log(serversList);\n\n        return serversList;\n    }\n\n    render() {\n        return (\n            <div>\n                List\n                {this.createList()}\n            </div>\n        );\n    }\n}\n\nexport default ServerList;"]},"metadata":{},"sourceType":"module"}