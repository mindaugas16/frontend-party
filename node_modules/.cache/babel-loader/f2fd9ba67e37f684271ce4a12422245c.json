{"ast":null,"code":"var _jsxFileName = \"/Users/mindaugas/Desktop/frontend-party/src/modules/ServerList/ServerList.tsx\";\nimport React, { Component } from \"react\";\nimport \"./ServerList.scss\";\nimport { withRouter } from 'react-router-dom';\nimport { localStorageKey } from \"../../constants/auth.constants\";\n\nclass ServerList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      isLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    const token = await localStorage.getItem(localStorageKey);\n\n    if (!token) {\n      console.log('Please login');\n      this.props.history.push('/sign-in');\n      return;\n    }\n\n    fetch('http://playground.tesonet.lt/v1/servers', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \".concat(token)\n      }\n    }).then(res => res.json()).then();\n    this.setState({\n      data: await response.json(),\n      isLoading: false\n    });\n  }\n\n  createList() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          data = _this$state.data;\n\n    if (isLoading) {\n      return;\n    }\n\n    if (data && !Array.isArray(data)) {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"No servers found\"));\n    }\n\n    return data.sort((a, b) => {\n      return a.distance - b.distance || +a.name - +b.name;\n    }).map((server, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, server.name), React.createElement(\"th\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, server.distance, \" km\"));\n    });\n  }\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table server-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Server\"), React.createElement(\"th\", {\n      scope: \"col\",\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Distance\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.createList())), isLoading ? React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Loading...\"))) : null);\n  }\n\n}\n\nexport default withRouter(ServerList);","map":{"version":3,"sources":["/Users/mindaugas/Desktop/frontend-party/src/modules/ServerList/ServerList.tsx"],"names":["React","Component","withRouter","localStorageKey","ServerList","state","data","isLoading","componentDidMount","token","localStorage","getItem","console","log","props","history","push","fetch","method","headers","then","res","json","setState","response","createList","Array","isArray","sort","a","b","distance","name","map","server","i","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"./ServerList.scss\";\nimport {withRouter} from 'react-router-dom';\nimport {localStorageKey} from \"../../constants/auth.constants\";\n\ninterface StateInterface {\n    data: ServerInterface[];\n    history?: History[];\n    isLoading: boolean;\n}\n\nexport interface ServerInterface {\n    name: string;\n    distance: number;\n}\n\nclass ServerList extends Component<any, StateInterface> {\n    state: StateInterface = {\n        data: [],\n        isLoading: true\n    };\n\n    async componentDidMount() {\n        const token = await localStorage.getItem(localStorageKey);\n        if (!token) {\n            console.log('Please login');\n            this.props.history.push('/sign-in');\n            return;\n        }\n        fetch('http://playground.tesonet.lt/v1/servers', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`,\n            }\n        }).then(res => res.json())\n            .then();\n\n        this.setState({\n            data: await response.json(),\n            isLoading: false\n        });\n    }\n\n    createList() {\n        const {isLoading, data} = this.state;\n\n        if (isLoading) {\n            return;\n        }\n\n        if(data && !Array.isArray(data)) {\n            return (<tr>\n                <td>No servers found</td>\n            </tr>)\n        }\n        return data.sort((a, b) => {\n            return a.distance - b.distance || +a.name - +b.name;\n        }).map((server, i) => {\n            return (\n                <tr key={i}>\n                    <th scope=\"row\">{server.name}</th>\n                    <th className=\"text-right\">{server.distance} km</th>\n                </tr>\n            )\n        });\n    }\n\n    render() {\n        const {isLoading} = this.state;\n        return (\n            <div>\n                <table className=\"table server-list\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Server</th>\n                        <th scope=\"col\" className=\"text-right\">Distance</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n\n                    {this.createList()}\n                    </tbody>\n                </table>\n                {isLoading ?\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"spinner-border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </div>\n                    : null\n                }\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ServerList);\n\n"]},"metadata":{},"sourceType":"module"}